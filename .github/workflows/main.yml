name: Continuous Integration
on:
  push:
    branches: [ master, 1_4_X, wip/3mdeb/BSD-port-CI ]
  pull_request:
    branches: [ master, 1_4_X, wip/3mdeb/BSD-port-CI]

jobs:
#  abi:
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Refresh dependencies
#        run: sudo apt update
#      - name: Install dependencies
#        run: ./contrib/ci/generate_dependencies.py | sudo xargs apt install -y
#      - name: Check ABI
#        run: ./contrib/ci/check-abi $(git describe --abbrev=0 --tags) $(git rev-parse HEAD)
#
#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        os: [fedora, debian-x86_64, arch, debian-i386]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Docker login
#        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
#        env:
#          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#      - name: Build in container
#        env:
#          CI_NETWORK: true
#          CI: true
#        run: |
#          echo $GITHUB_WORKSPACE
#          docker run --privileged -e CI=true -t -v $GITHUB_WORKSPACE:/github/workspace docker.pkg.github.com/fwupd/fwupd/fwupd-${{matrix.os}}:latest
#
  build-freebsd:
    runs-on: macos-latest
    name: A job to run test FreeBSD
    env:
      BUILD_DEPS_BIN_URL: "https://cloud.3mdeb.com/index.php/s/LHp8zgjMbjHKdSw/download"
    steps:
    - name: Test in FreeBSD
      id: test
      uses: vmactions/freebsd-vm@v0.1.2
      with:
        usesh: true
        prepare: pkg install -y git unzip wget
        envs: 'BUILD_DEPS_BIN_URL'
        sync: rsync
        run: |
          id -a
          env
          git clone https://github.com/NetBSD/pkgsrc.git --depth 1
          echo "STARTING BOOTSRAP OF PKGSRC"
          ./pkgsrc/bootstrap/bootstrap
          echo "UNPACK AND INSTALL BINARY DEPENDENCIES"
          wget -O build_deps.zip ${BUILD_DEPS_BIN_URL}
          unzip build_deps.zip -d build_deps
          /usr/pkg/sbin/pkg_add build_deps/*
          cd pkgsrc
          git clone https://github.com/3mdeb/pkgsrc-wip.git --branch fwupd-bsd --depth 1 wip
          cd wip/fwupd/
          echo "STARTING BMAKE INSTALL BUILD OF FWUPD"
          date > ../../../fwupd_build_start
          /usr/pkg/bin/bmake install
          date > ../../../fwupd_build_end

    - name: Upload fwupd binary as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: fwupd
        path: |
          fwupd_build_end
          ../fwupd_build_end
          ../../fwupd_build_end
          ../../../fwupd_build_end
          ../../packages/fwupd*

 
 #  fuzzing:
 #    runs-on: ubuntu-latest
 #    steps:
 #    - name: Build Fuzzers
 #      id: build
 #      uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@master
 #      with:
 #        oss-fuzz-project-name: 'fwupd'
 #        dry-run: false
 #    - name: Run Fuzzers
 #      uses: google/oss-fuzz/infra/cifuzz/actions/run_fuzzers@master
 #      with:
 #        oss-fuzz-project-name: 'fwupd'
 #        fuzz-seconds: 300
 #        dry-run: false
 #    - name: Upload Crash
 #      uses: actions/upload-artifact@v1
 #      if: failure() && steps.build.outcome == 'success'
 #      with:
 #        name: artifacts
 #        path: ./out/artifacts
